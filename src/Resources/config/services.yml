services:
    tenside.home:
        class:  Tenside\Core\Util\HomePathDeterminator
        public: false

    tenside.status:
        class:     Tenside\CoreBundle\Util\InstallationStatusDeterminator
        arguments: ["@tenside.home"]
        public: true

    tenside.cli_script:
        class:     Tenside\CoreBundle\Util\CliScriptDeterminator
        # I really hope this works out as intended, if not inject the kernel.
        arguments: ["%kernel.root_dir%/%tenside.script_name%"]
        public:    true

    tenside.config:
        class:          Tenside\Core\Config\TensideJsonConfig
        factory:        [Tenside\CoreBundle\DependencyInjection\Factory\TensideJsonConfigFactory, create]
        arguments:      ["@tenside.home"]
        public:         true

    tenside.tasks:
        class:          Tenside\Core\Task\TaskList
        factory:        [Tenside\CoreBundle\DependencyInjection\Factory\TaskListFactory, create]
        arguments:      ["@tenside.home", "@tenside.taskfactory"]
        public:         true

    tenside.composer_json:
        class:          Tenside\Core\Composer\ComposerJson
        factory:        [Tenside\CoreBundle\DependencyInjection\Factory\ComposerJsonFactory, create]
        arguments:      ["@tenside.home"]
        shared:         false

    tenside.taskrun_lock:
        class:          Symfony\Component\Filesystem\LockHandler
        factory:        [Tenside\CoreBundle\DependencyInjection\Factory\TaskRunLockHandlerFactory, create]
        arguments:      ["@tenside.home"]

    tenside.user_provider:
        class:     Tenside\CoreBundle\Security\UserProviderFromConfig
        arguments: ["@tenside.config"]

    tenside.exception_renderer:
        class:     Tenside\CoreBundle\EventListener\ExceptionListener
        arguments:
          logger:  "@logger"
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    tenside.taskfactory:
        class:     Tenside\Core\Task\CompositeTaskFactory
    tenside.taskfactory.composer:
        class:     Tenside\Core\Task\Composer\ComposerTaskFactory
        arguments: ["@tenside.home"]
        tags:
            - { name: tenside.taskfactory }

    tenside.jwt_authenticator:
        class:     Tenside\CoreBundle\Security\JWTAuthenticator
        arguments: ["@tenside.config"]
        public:    true
        # cannot be shared as the install controller is manipulating the secret.
        shared:    false

    tenside.permission_voter:
        class:     Tenside\CoreBundle\Security\PermissionVoter
        arguments: ["@router", "@request_stack", { cache_dir: "%kernel.cache_dir%", debug: "%kernel.debug%" }]
        tags:
            - { name: security.voter }
        public:    false

    tenside.permission_voter.cache_warmer:
        class:     Tenside\CoreBundle\CacheWarmer\VoterCacheWarmer
        arguments: ["@tenside.permission_voter"]
        tags:
            - { name: kernel.cache_warmer }

    tenside.logger:
        class:          Monolog\Handler\RotatingFileHandler
        factory:        [Tenside\CoreBundle\DependencyInjection\Factory\LoggerFactory, create]
        arguments:     ["@kernel", "%kernel.environment%.log", 10, 'debug']

    tenside.apidoc_parser:
        class:          Tenside\CoreBundle\Annotation\TensideApiDocHandler
        tags:
          - { name: nelmio_api_doc.extractor.handler }
        public: false
